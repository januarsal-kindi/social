{"version":3,"sources":["shared/constants/env.ts","config/httpRequest.ts","store/selector/userDetail.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/AwaitValue.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","store/actions/userDetail.ts","pages/user-detail/views/CardUser.tsx","pages/user-detail/views/Sidebar.tsx","pages/user-detail/views/PostCard.tsx","pages/user-detail/views/PostCreate.tsx","pages/user-detail/views/PostList.tsx","pages/user-detail/views/albums/AlbumCard.tsx","pages/user-detail/views/albums/AlbumList.tsx","components/modal/index.tsx","pages/user-detail/views/PostEdit.tsx","pages/user-detail/index.tsx"],"names":["console","log","process","ENV","API_URL","httpRequest","API_BASE_CONFIG","baseURL","timeout","cancelToken","axios","CancelToken","source","socialApi","create","axiosInterceptorsResponseError","error","a","response","config","data","status","Promise","reject","interceptors","use","request","headers","token","withAxiosCancelation","cancelRequest","message","cancel","UserDetail","state","userDetail","UserPost","posts","UserAlbum","albums","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","_AwaitValue","value","this","wrapped","_awaitAsyncGenerator","AsyncGenerator","gen","front","back","resume","key","arg","result","wrappedAwait","resolve","then","settle","done","err","type","next","_invoke","undefined","_wrapAsyncGenerator","fn","apply","arguments","prototype","getCommentByPost","i","length","postByIndex","get","id","getComments","comments","getCommentPost","params","dispatch","post","postWithComment","push","USER_POST_SUCCESS","payload","limit","page","getPostByUserId","USER_POST_LOADING","userId","pages","res","USER_POST_FAIL","getPhotByAlbum","AlbumByIndex","getPhotos","photos","getPhotoByAlbum","albumWithPhoto","USER_ALBUMS_SUCCESS","UserItem","props","user","onClickCard","onClick","e","className","name","split","map","n","join","toUpperCase","company","username","website","address","street","suite","city","zipcode","React","memo","Sidebar","activeTab","onClickTab","PostItem","onClickPost","title","body","comment","email","PostCreate","onSubmitCreatePost","useState","setTitle","setBody","onHandleChangeForm","htmlFor","onChange","target","placeholder","PostList","PostCard","album","photo","src","thumbnailUrl","AlbumCard","Modal","showModal","onClose","children","onSubmitEditPost","ShowModalPostEdit","onCloseModal","onDeletPost","useEffect","paramPost","Home","useDispatch","useSelector","UserState","userPosts","UserPostState","userAlbums","UserAlbumState","useParams","setActiveTab","isShowModal","configModalPost","setConfigModalPost","USER_DETAIL_LOADING","USER_DETAIL_SUCCESS","USER_DETAIL_FAIL","getUserDetail","parseInt","USER_ALBUMS_LOADING","USER_ALBUMS_FAIL","CardUser","tab","AlbumList","put","prev","delete"],"mappings":"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","file":"static/js/5.2551241e.chunk.js","sourcesContent":["const API_URL = process.env.REACT_APP_API_URL\r\nconsole.log(process.env)\r\nconst ENV = {\r\n    API_URL,\r\n}\r\n\r\nexport default ENV","import axios, { AxiosRequestConfig , AxiosError ,AxiosResponse} from \"axios\";\r\nimport ENV from '../shared/constants/env'\r\n\r\nconst httpRequest = () => {\r\n\r\n\tconst API_BASE_CONFIG = {\r\n\t\tbaseURL: ENV.API_URL,\r\n\t\ttimeout: 60000,\r\n\t};\r\n\r\n\tconst cancelToken = axios.CancelToken.source();\r\n\r\n\tconst socialApi : any = axios.create(API_BASE_CONFIG);\r\n\r\n\t// add cancelation feature to axios request config\r\n\tconst withAxiosCancelation = (config:AxiosRequestConfig) => {\r\n\t\tconfig.cancelToken = cancelToken.token;\r\n\t\treturn config;\r\n\t};\r\n\r\n\t// handleGlobalConfig\r\n\tconst handleGlobalConfig = (config : AxiosRequestConfig) => {\r\n\t\tconst globalConfig = withAxiosCancelation(config);\r\n\t\treturn globalConfig;\r\n\t};\r\n\r\n\tconst axiosInterceptorsRequest = (config : AxiosRequestConfig ) => {\r\n\t\tconfig.headers[\"Content-Type\"] = \"application/json\";\r\n\t\treturn config;\r\n\t};\r\n\r\n\tconst axiosInterceptorsRequestError = (error : AxiosRequestConfig) => {\r\n\t\treturn Promise.reject(error);\r\n\t};\r\n\r\n\tconst axiosInterceptorsResponseSuccess = (response : AxiosResponse ) => {\r\n\t\treturn response;\r\n\t};\r\n\r\n\tconst axiosInterceptorsResponseError = async (error : AxiosError) => {\r\n\t\tconst { config, data, status } = error.response || {};\r\n\t\treturn Promise.reject(error);\r\n\t};\r\n\r\n\t// digivApi.interceptors.response.use(\r\n\t//     axiosInterceptorsResponseSuccess,\r\n\t//     axiosInterceptorsResponseError\r\n\t// );\r\n\r\n\tsocialApi.interceptors.response.use(\r\n\t\taxiosInterceptorsResponseSuccess,\r\n\t\taxiosInterceptorsResponseError,\r\n\t);\r\n\r\n\tsocialApi.interceptors.request.use(\r\n\t\taxiosInterceptorsRequest,\r\n\t\taxiosInterceptorsRequestError,\r\n\t);\r\n\tsocialApi.interceptors.request.use(handleGlobalConfig);\r\n\treturn {\r\n\t\tcancelRequest: (message : any) => cancelToken.cancel(message),\r\n\t\tsocialApi,\r\n\t};\r\n};\r\nexport const socialApi = httpRequest().socialApi;\r\nexport default httpRequest;\r\n","\r\nimport { RootStore } from '@store/reducers/rootReducer';\r\n\r\nexport const UserDetail = (state: RootStore) => state.userDetail.userDetail\r\nexport const UserPost = (state: RootStore) => state.userDetail.posts\r\nexport const UserAlbum = (state: RootStore) => state.userDetail.albums","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"@babel/runtime/helpers/esm/AwaitValue\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"@babel/runtime/helpers/esm/AwaitValue\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"@babel/runtime/helpers/esm/AsyncGenerator\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import { Dispatch } from \"redux\";\r\nimport {\r\n\tUSER_DETAIL_LOADING,\r\n\tUSER_DETAIL_FAIL,\r\n\tUSER_DETAIL_SUCCESS,\r\n\tUSER_POST_LOADING,\r\n\tUSER_POST_FAIL,\r\n\tUSER_POST_SUCCESS,\r\n\tUSER_ALBUMS_LOADING,\r\n\tUSER_ALBUMS_FAIL,\r\n\tUSER_ALBUMS_SUCCESS,\r\n\tUserDetailDispatchType,\r\n\tUserPostsDispatchType,\r\n\tuserAlbumsDispatchType,\r\n} from \"@store/types/userDetail.types\";\r\nimport {Album} from \"@store/types/album.types\";\r\nimport {Post} from \"@store/types/post.types\";\r\n\r\nimport httpRequest from \"../../config/httpRequest\";\r\n\r\nconst { socialApi } = httpRequest();\r\nexport const getUserDetail = (id: number) => async (\r\n\tdispatch: Dispatch<UserDetailDispatchType>,\r\n) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAIL_LOADING,\r\n\t\t});\r\n\r\n\t\tconst res = await socialApi.get(`users/${id}`);\r\n\r\n\t\tif (res.data) {\r\n\t\t\tconst { data } = res;\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_DETAIL_SUCCESS,\r\n\t\t\t\tpayload: data,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_DETAIL_FAIL,\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAIL_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\ntype parapDetailUserAtributes = {\r\n\tuserId: number;\r\n\tlimit: number;\r\n\tpages: number;\r\n};\r\n\r\nconst  getCommentByPost = async function*(posts :Array<Post>){\r\n    for (let i=0 ; i < posts.length ; i++){\r\n        try {\r\n            const postByIndex = posts[i];\r\n            const getComments = await socialApi.get(\r\n               `post/${postByIndex.id}/comments`,\r\n           );\r\n           if(getComments.data){ \r\n\r\n               yield {\r\n                   ...postByIndex,\r\n                   comments: getComments.data\r\n               }\r\n            }else {\r\n                yield postByIndex\r\n            }\r\n            \r\n        } catch (error) {\r\n        }\r\n       \r\n    }\r\n  \r\n}\r\n\r\nexport const getCommentPost = (params :Array<Post>) => async (\r\n\tdispatch: Dispatch<UserPostsDispatchType>,\r\n) => {\r\n\ttry {\r\n        const post = []\r\n        for await (let postWithComment of getCommentByPost(params)) {\r\n            post.push(postWithComment)\r\n        }\r\n        console.log(params)\r\n        dispatch({\r\n            type: USER_POST_SUCCESS,\r\n            payload: {\r\n                limit: 100,\r\n                page: 1,\r\n                posts: post,\r\n            },\r\n        });\r\n\t} catch (e) {\r\n\t\t\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport const getPostByUserId = (params: parapDetailUserAtributes) => async (\r\n\tdispatch: Dispatch<UserPostsDispatchType | any>,\r\n) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_POST_LOADING,\r\n\t\t});\r\n\r\n\t\tconst res = await socialApi.get(\r\n\t\t\t`users/${params.userId}/posts?start=${params.pages}&limit=${params.limit}&_sort=id&_order=desc`,\r\n\t\t);\r\n\r\n\t\tif (res.data) {\r\n\t\t\tconst { data } = res;\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_POST_SUCCESS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tlimit: params.limit,\r\n\t\t\t\t\tpage: params.pages,\r\n\t\t\t\t\tposts: data,\r\n\t\t\t\t},\r\n\t\t\t});\r\n            dispatch(getCommentPost(data))\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_POST_FAIL,\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\tdispatch({\r\n\t\t\ttype: USER_POST_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const createPost = (params: {\r\n\tuserId: number;\r\n\ttitle: string;\r\n\tbody: string;\r\n}) => async (dispatch: Dispatch<UserPostsDispatchType | any>) => {\r\n\ttry {\r\n\t\tconst res = await socialApi.post(\r\n\t\t\t`users/${params.userId}/posts`,{\r\n                title: params.title,\r\n                body:params.body\r\n            }\r\n\t\t);\r\n        if(res){\r\n            dispatch(getPostByUserId({\r\n                userId: params.userId,\r\n                pages :1,\r\n                limit : 100\r\n            }))\r\n        }\r\n      \t\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\tdispatch({\r\n\t\t\ttype: USER_POST_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport const editPost = (params: Post ) => async (dispatch: Dispatch<UserPostsDispatchType | any>) => {\r\n\ttry {\r\n\t\tconst res = await socialApi.put(\r\n\t\t\t`posts/${params.id}`,{\r\n\t\t\t\tuserId: params.userId,\r\n                title: params.title,\r\n                body:params.body\r\n            }\r\n\t\t);\r\n        if(res){\r\n            dispatch(getPostByUserId({\r\n                userId: parseInt(params.userId),\r\n                pages :1,\r\n                limit : 100\r\n            }))\r\n        }\r\n      \t\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\tdispatch({\r\n\t\t\ttype: USER_POST_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const deletePost = (params: Post ) => async (dispatch: Dispatch<UserPostsDispatchType | any>) => {\r\n\ttry {\r\n\t\tconst res = await socialApi.delete(\r\n\t\t\t`posts/${params.id}`\r\n\t\t);\r\n        if(res){\r\n            dispatch(getPostByUserId({\r\n                userId: parseInt(params.userId),\r\n                pages :1,\r\n                limit : 100\r\n            }))\r\n        }\r\n      \t\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\tdispatch({\r\n\t\t\ttype: USER_POST_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\nexport const getAlbumByUserId = (params: parapDetailUserAtributes) => async (\r\n\tdispatch: Dispatch<userAlbumsDispatchType | any>,\r\n) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_ALBUMS_LOADING,\r\n\t\t});\r\n\r\n\t\tconst res = await socialApi.get(\r\n\t\t\t`users/${params.userId}/albums?start=${params.pages}&limit=${params.limit}`,\r\n\t\t);\r\n\r\n\t\tif (res.data) {\r\n\t\t\tconst { data } = res;\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_ALBUMS_SUCCESS,\r\n\t\t\t\tpayload: {\r\n                    limit: params.limit,\r\n\t\t\t\t\tpage: params.pages,\r\n\t\t\t\t\talbums: data,\r\n                },\r\n\t\t\t});\r\n            dispatch(getPhotoByAlbum(data))\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_ALBUMS_FAIL,\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_ALBUMS_FAIL,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst  getPhotByAlbum = async function*(albums :Array<Album>){\r\n    for (let i=0 ; i < albums.length ; i++){\r\n        try {\r\n            const AlbumByIndex = albums[i];\r\n            const getPhotos = await socialApi.get(\r\n               `albums/${AlbumByIndex.id}/photos`,\r\n           );\r\n           if(getPhotos.data){ \r\n\r\n               yield {\r\n                   ...AlbumByIndex,\r\n                   photos: getPhotos.data\r\n               }\r\n            }\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n       \r\n    }\r\n  \r\n}\r\n\r\nexport const getPhotoByAlbum = (params :Array<Album>) => async (\r\n\tdispatch: Dispatch<userAlbumsDispatchType>,\r\n) => {\r\n\ttry {\r\n        const albums = []\r\n        for await (let albumWithPhoto of getPhotByAlbum(params)) {\r\n            albums.push(albumWithPhoto)\r\n        }\r\n        dispatch({\r\n            type: USER_ALBUMS_SUCCESS,\r\n            payload: {\r\n                limit: 100,\r\n                page: 1,\r\n                albums: albums,\r\n            },\r\n        });\r\n\t} catch (e) {\r\n\t\t\r\n\t}\r\n};\r\n\r\n\r\n","import React from 'react'\r\nimport { User as userType } from \"@store/types/user.types\"\r\ninterface UserItemProps {\r\n    user: userType,\r\n    onClickCard?: (id: string) => void\r\n}\r\n\r\nconst UserItem: React.FunctionComponent<UserItemProps> = (props: UserItemProps) => {\r\n    const { user, onClickCard } = props\r\n    return (\r\n        <div onClick={(e) => { onClickCard && (onClickCard(user.id)) }} className=\"cursor-pointer relative bg-white py-6 px-6 rounded-3xl w-full my-4 shadow-xl\">\r\n            <div className=\" text-white flex items-center absolute rounded-full py-4 px-4 shadow-xl bg-teal-500 left-4 -top-6\">\r\n                {user.name ? (<h1 className=\"text-3xl text-bold\">{user.name?.split(\" \").map((n) => n[0]).join(\"\").toUpperCase()}</h1>) : ('sad')}\r\n            </div>\r\n            <div className=\"mt-8\">\r\n                <div className=\"flex space-x-2 text-gray-400 text-sm\">\r\n                    <p className=\"text-2xl font-semibold my-2\">{user.name}</p>\r\n                </div>\r\n                <div className=\" text-2xl flex space-x-2 text-gray-400 text-sm\">\r\n                    <p>{user.company.name}  |  @{user.username}</p>\r\n                </div>\r\n                <div className=\"flex text-xl space-x-2 text-gray-400 text-sm my-3\">\r\n\r\n                    <p>{user.website}</p>\r\n                </div>\r\n                <div className=\"border-t-2\"></div>\r\n\r\n                <div className=\"flex justify-between\">\r\n                    <div className=\"my-2\">\r\n                        <p className=\"font-semibold text-base mb-2 text-left\">Address</p>\r\n                        <div className=\"flex space-x-2\">\r\n                            {user.address.street} ,  {user.address.suite} , {user.address.city} , {user.address.zipcode}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                    <p className=\"font-semibold text-base mb-2 text-right\">Company</p>\r\n                        <div className=\"text-base text-gray-400 font-semibold\">\r\n                            <p>\r\n                                {user.company.name}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(UserItem)","import React from 'react'\r\n\r\ntype SidebarProps = {\r\n    activeTab: string,\r\n    onClickTab: (tab: string) => void\r\n}\r\nconst Sidebar: React.FunctionComponent<SidebarProps> = (props: SidebarProps) => {\r\n    const { activeTab, onClickTab } = props;\r\n    return (\r\n        <div className=\"h-full w-full text-left border-r-2 overflow-y-auto scrolling-touch lg:h-auto lg:block lg:relative lg:sticky lg:bg-transparent overflow-hidden lg:top-18 bg-white mr-24 lg:mr-0\">\r\n            <nav className=\"px-1 pt-3 overflow-y-auto font-medium text-base sm:px-3 xl:px-5 lg:text-sm pb-10 lg:pt-3 lg:pb-14 sticky?lg:h-(screen-18)\">\r\n                <ul>\r\n                    <li className=\"mt-8\">\r\n                        {/* <h5 className=\"px-3 mb-3 lg:mb-3 uppercase tracking-wide font-semibold text-sm lg:text-xs text-gray-900\">Getting started</h5> */}\r\n                        <ul>\r\n                            <li>\r\n                                <a\r\n                                    className={`px-3 py-2 transition-colors duration-200 relative block  ${activeTab == \"posts\" ? 'text-cyan-700' : 'hover:text-gray-900 text-gray-500'}`}\r\n                                    onClick={(e) => onClickTab('posts')}\r\n                                    >\r\n                                    <span className=\"rounded-md absolute inset-0 bg-cyan-50\"></span>\r\n                                    <h5 className=\"relative text-xl\">Posts</h5>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a\r\n                                    className={`px-3 py-2 transition-colors duration-200 relative block ${activeTab == \"albums\" ? 'text-cyan-700' : 'hover:text-gray-900 text-gray-500'}`}\r\n                                    onClick={(e) => onClickTab('albums')}\r\n                                    >\r\n                                    <span className=\"rounded-md absolute inset-0 bg-cyan-50 opacity-0\"></span>\r\n                                    <h5 className=\"relative text-xl\">Albums</h5>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar","import React from 'react'\r\nimport { Post } from '@store/types/post.types'\r\n\r\n\r\ntype PostItemProps = {\r\n    post: Post\r\n    onClickPost ?: (post : Post) => void\r\n\r\n}\r\nconst PostItem = (props: PostItemProps) => {\r\n    const { post ,onClickPost} = props\r\n    return (\r\n        <div>\r\n            <div  className=\"w-full py-4 px-8 bg-white shadow-lg rounded-lg my-10\">\r\n                <div className=\"text-left \" onClick={()=> onClickPost && onClickPost(post) }>\r\n                    <h2 className=\"text-gray-800 text-3xl font-semibold\">{post.title}</h2>\r\n                    {post.body && (\r\n                        <p className=\"mt-2 text-gray-600\">{post.body}</p>\r\n                    )}\r\n\r\n                </div>\r\n                <div className=\"grid grid-cols-1 mt-4 gap-4 \">\r\n                    {post.comments && (\r\n                        post.comments.map((comment) => (\r\n                            <div className=\"border-l-2 text-left pl-2\">\r\n                                <div className=\"flex items-center\">\r\n                                    <p className=\"text-bold text-xl ml-1\">{comment.name} </p>  <p className=\"text-gray-500 ml-3\">{comment.email}</p>\r\n                                </div>\r\n                                <p className=\"text-md ml-1\">{comment.body}</p>\r\n                            </div>\r\n                        )\r\n                        )\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(PostItem)\r\n","import React , {useState} from 'react'\r\n\r\ntype PostCreate = {\r\n    onSubmitCreatePost?: (title :string,body :string) => void\r\n}\r\n\r\n\r\nconst PostCreate :React.FunctionComponent<PostCreate> = (props : PostCreate) => {\r\n    const {onSubmitCreatePost} = props\r\n    const [title,setTitle] = useState<string>(\"\")\r\n    const [body,setBody] = useState<string>(\"\")\r\n\r\n\r\n    const onHandleChangeForm = (type :string,value :string) => {\r\n        if(type === \"title\"){\r\n            setTitle(value)\r\n        }\r\n        if (type === \"body\"){\r\n            setBody(value)\r\n        }\r\n    }\r\n    const onSubmitForm = () => {\r\n        if(onSubmitCreatePost){\r\n            onSubmitCreatePost(title,body)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"w-full text-left py-4 px-8 bg-white shadow-lg rounded-lg my-10\">\r\n                <form className=\"bg-white rounded px-8  py-4 \">\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                            Title\r\n                         </label>\r\n                        <input value={title} onChange={(e) => onHandleChangeForm('title',e.target.value)} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Username\" />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n                            Body\r\n                         </label>\r\n                        <textarea className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \r\n                        id=\"password\" \r\n                        onChange={(e) => onHandleChangeForm('body',e.target.value)}\r\n                        placeholder=\"******************\" />\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <button onClick={onSubmitForm} className=\"bg-teal-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\r\n                           Post\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreate\r\n","import React from 'react'\r\nimport { Post } from '@store/types/post.types'\r\nimport PostCard  from './PostCard'\r\nimport PostCreate from './PostCreate'\r\ntype PostListTypeProps = {\r\n    posts: Post[],\r\n    onClickPost? : (post : Post) => void,\r\n    onSubmitCreatePost?: (title: string, body: string) => void\r\n\r\n}\r\nconst PostList: React.FunctionComponent<PostListTypeProps> = (props: PostListTypeProps) => {\r\n    const { posts, onSubmitCreatePost ,onClickPost } = props\r\n    return (\r\n        <>\r\n            <h5 className=\"text-4xl text-left text-bold\">  Post</h5>\r\n            <div>\r\n                <PostCreate onSubmitCreatePost={onSubmitCreatePost} />\r\n                {posts.map((post) => (\r\n                    <PostCard post={post} key={post.id} onClickPost={onClickPost} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostList","import React from 'react'\r\nimport {Post } from '@store/types/post.types'\r\nimport { Album } from '@store/types/album.types'\r\n\r\n\r\ntype PostItemProps = {\r\n    album : Album\r\n\r\n}\r\nconst PostItem = ( props: PostItemProps) => {\r\n    const {album} = props\r\n    return (\r\n        <div>\r\n            <div className=\"w-full py-4 px-8 bg-white shadow-lg rounded-lg my-10\">\r\n                <div className=\"text-left\">\r\n                    <h2 className=\"text-gray-800 text-3xl font-semibold\">{album.title}</h2>                    \r\n                </div>\r\n                <div className=\"grid grid-cols-5 mt-4 gap-4\">\r\n                    {album.photos && (\r\n                        album.photos.map((photo) =>(\r\n                            <img className=\"w-full\" src={photo.thumbnailUrl}/>\r\n                        ))\r\n                    )}  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  React.memo(PostItem)\r\n","import React from 'react'\r\nimport { Album } from '@store/types/album.types'\r\nimport AlbumCard  from './AlbumCard'\r\n\r\n\r\ntype AlbumListTypeProps = {\r\n    albums: Album[],\r\n\r\n}\r\nconst PostList: React.FunctionComponent<AlbumListTypeProps> = (props: AlbumListTypeProps) => {\r\n    const { albums  } = props\r\n    return (\r\n        <>\r\n            <h5 className=\"text-4xl text-left text-bold\">  Album</h5>\r\n            <div>\r\n                {albums.map((album) => (\r\n                    <AlbumCard album={album} key={album.id} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostList","import React from \"react\";\r\n\r\ntype ModalPropsTypes = {\r\n    showModal: boolean,\r\n    title : string,\r\n    onClose : ()=> void,\r\n    children : React.ReactNode | Element\r\n}\r\n\r\nconst Modal:React.FunctionComponent<ModalPropsTypes> = (props: ModalPropsTypes) => {\r\n  const {showModal,title, onClose} = props\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <>\r\n          <div\r\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n          >\r\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n              {/*content*/}\r\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                {/*header*/}\r\n                <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\r\n                  <h3 className=\"text-3xl font-semibold\">\r\n                   {title}\r\n                  </h3>\r\n                  <button\r\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                    onClick={() => onClose()}\r\n                  >\r\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                      ×\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n                {/*body*/}\r\n                <div className=\"relative p-6 flex-auto\">\r\n                    {props.children}\r\n                </div>\r\n                {/*footer*/}\r\n                {/* <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\r\n                  <button\r\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                  >\r\n                    Save Changes\r\n                  </button>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nexport default Modal","import React, { useState, useEffect } from 'react'\r\nimport { Post } from '@store/types/post.types'\r\nimport Modal from '@components/modal/'\r\ntype PostEdit = {\r\n    onSubmitEditPost?: (post: Post) => void\r\n    post: Post,\r\n    ShowModalPostEdit: boolean,\r\n    onDeletPost: (post: Post) => void\r\n    onCloseModal: () => void\r\n}\r\n\r\n\r\nconst PostCreate: React.FunctionComponent<PostEdit> = (props: PostEdit) => {\r\n    const { onSubmitEditPost, post, ShowModalPostEdit, onCloseModal ,onDeletPost } = props\r\n    const [title, setTitle] = useState<string>(\"\")\r\n    const [body, setBody] = useState<string>(\"\")\r\n\r\n\r\n    const onHandleChangeForm = (type: string, value: string) => {\r\n        if (type === \"title\") {\r\n            setTitle(value)\r\n        }\r\n        if (type === \"body\") {\r\n            setBody(value)\r\n        }\r\n    }\r\n    const onSubmitForm = () => {\r\n        if (onSubmitEditPost) {\r\n            const paramPost = { ...post, body, title }\r\n            onSubmitEditPost(paramPost)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTitle(post.title)\r\n        setBody(post.body)\r\n    }, [onSubmitEditPost])\r\n\r\n    return (\r\n        <Modal onClose={onCloseModal} showModal={ShowModalPostEdit} title=\"Edit Post\">\r\n            <div>\r\n                <div className=\"w-full text-left py-4 px-8 bg-white shadow-lg rounded-lg my-10\">\r\n                    <form className=\"bg-white rounded px-8  py-4 \">\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                                Title\r\n                         </label>\r\n                            <input value={title} onChange={(e) => onHandleChangeForm('title', e.target.value)} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Username\" />\r\n                        </div>\r\n                        <div className=\"mb-6\">\r\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n                                Body\r\n                         </label>\r\n                            <textarea className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"password\"\r\n                                value={body}\r\n                                onChange={(e) => onHandleChangeForm('body', e.target.value)}\r\n                                placeholder=\"******************\" />\r\n                        </div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <button onClick={onSubmitForm} className=\"bg-teal-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\r\n                                Post\r\n                            </button>\r\n                            <button\r\n                                className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                                type=\"button\"\r\n                                onClick={()=>onDeletPost(post)}>\r\n                                Delete Post\r\n                                </button>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PostCreate\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {\r\n    UserDetail as UserState,\r\n    UserPost as UserPostState,\r\n    UserAlbum as UserAlbumState\r\n} from \"@store/selector/userDetail\";\r\nimport { getUserDetail, getPostByUserId, createPost, getAlbumByUserId,editPost ,deletePost} from \"../../store/actions/userDetail\";\r\nimport CardUser from \"./views/CardUser\"\r\nimport Sidebar from \"./views/Sidebar\"\r\nimport PostList from \"./views/PostList\"\r\nimport AlbumList from \"./views/albums/AlbumList\"\r\nimport ModalPostEdit from \"./views/PostEdit\"\r\nimport { Post } from '@store/types/post.types';\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const userDetail = useSelector(UserState);\r\n    const userPosts = useSelector(UserPostState);\r\n    const userAlbums = useSelector(UserAlbumState);\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [activeTab, setActiveTab] = useState<string>(\"posts\")\r\n    const [configModalPost, setConfigModalPost] = useState<{\r\n        isShowModal: boolean,\r\n        post: Post\r\n    }>({\r\n        isShowModal: false,\r\n        post: {\r\n            userId: '',\r\n            id: '',\r\n            title: '',\r\n            body: ''\r\n        }\r\n    })\r\n\r\n\r\n    const onSubmitCreatePost = (title: string, body: string) => {\r\n        dispatch(createPost({\r\n            userId: parseInt(id),\r\n            title,\r\n            body\r\n        }))\r\n    }\r\n\r\n    const onSubmitEditPost = (post: Post) => {\r\n        dispatch(editPost(post))\r\n        setConfigModalPost((prev)=> ({\r\n            ...configModalPost,\r\n            isShowModal : false,\r\n        }))\r\n    }\r\n\r\n    const onDeletPost = (post:Post) => {\r\n        dispatch(deletePost(post))\r\n        setConfigModalPost((prev)=> ({\r\n            ...configModalPost,\r\n            isShowModal : false,\r\n        }))\r\n    }\r\n    const onCloseModalEditPost = () => {\r\n        setConfigModalPost((prev) => ({ ...prev, isShowModal: false }))\r\n    }\r\n    const onClickTab = (tab: string) => {\r\n        setActiveTab(tab)\r\n    }\r\n\r\n    const onClickPost = (post: Post) => {\r\n        setConfigModalPost({\r\n            isShowModal: true,\r\n            post: post,\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserDetail(parseInt(id)))\r\n        dispatch(getPostByUserId({\r\n            userId: parseInt(id),\r\n            limit: 100,\r\n            pages: 1\r\n        }))\r\n        dispatch(getAlbumByUserId({\r\n            userId: parseInt(id),\r\n            limit: 100,\r\n            pages: 1\r\n        }))\r\n\r\n    }, [])\r\n    return (\r\n        <div className=\"w-full max-w-5xl mx-auto my-20\">\r\n            <CardUser\r\n                user={userDetail.data}\r\n            />\r\n            <div className=\"grid grid-cols-4 gap-4 mt-10\">\r\n                <div className=\"flex\">\r\n                    <Sidebar activeTab={activeTab} onClickTab={onClickTab} />\r\n                </div>\r\n                <div className=\"col-span-3\">\r\n                    {activeTab == \"posts\" && (\r\n                        <PostList posts={userPosts.data}\r\n                            onSubmitCreatePost={onSubmitCreatePost}\r\n                            onClickPost={onClickPost}\r\n                        />\r\n                    )}\r\n\r\n                    {activeTab === \"albums\" && (\r\n                        <AlbumList albums={userAlbums.data} />\r\n                    )}\r\n\r\n                </div>\r\n\r\n                <ModalPostEdit\r\n                    onSubmitEditPost={onSubmitEditPost}\r\n                    post={configModalPost.post}\r\n                    ShowModalPostEdit={configModalPost.isShowModal}\r\n                    onCloseModal={onCloseModalEditPost}\r\n                    onDeletPost={onDeletPost}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}