{"version":3,"sources":["store/types/user.types.ts","config/route.ts","components/navbar/index.tsx","components/layout/index.tsx","App.tsx","reportWebVitals.ts","store/reducers/user.ts","store/reducers/userDetail.ts","store/reducers/rootReducer.ts","store/index.ts","index.tsx","store/types/userDetail.types.ts"],"names":["USER_LIST_LOADING","USER_LIST_FAIL","USER_LIST_SUCCESS","routers","name","path","component","React","lazy","Navbar","useState","navbarOpen","setNavbarOpen","className","href","type","onClick","id","Layout","props","children","App","fallback","basename","Routes","map","route","index","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","userList","loading","list","page","limit","error","isError","message","userReducer","state","action","payload","userDetail","data","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","posts","albums","USER_DETAIL_FAIL","setUserDetailFail","USER_DETAIL_LOADING","setUserLoading","USER_DETAIL_SUCCESS","setUserSuccess","USER_POST_LOADING","setUserPostFail","USER_POST_FAIL","setUserPostLoading","USER_POST_SUCCESS","setUserPostSuccess","USER_ALBUMS_FAIL","setUserAlbumsFail","USER_ALBUMS_LOADING","setUserAlbumsLoading","USER_ALBUMS_SUCCESS","setUserAlbumsSuccess","RootReducer","combineReducers","user","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a93bf719.chunk.js","sourcesContent":["export const USER_LIST_LOADING = \"user/USER_LIST_LOADING\";\r\nexport const USER_LIST_FAIL = \"MOVIE_LIST_FAIL\";\r\nexport const USER_LIST_SUCCESS = \"MOVIE_LIST_SUCCESS\";\r\n\r\n\r\nexport interface UserList {\r\n  list : User[],\r\n  page : number,\r\n  limit : number\r\n}\r\n\r\nexport interface User  {\r\n    id: string,\r\n    name: string,\r\n    username: string,\r\n    email : string,\r\n    address : UserAddress,\r\n    phone : string,\r\n    website : string,\r\n    company : {\r\n        name : string,\r\n        catchPhrase : string,\r\n        bs : string\r\n    }\r\n}\r\n\r\nexport type UserAddress = {\r\n    street : string,\r\n    suite : string,\r\n    city : string,\r\n    zipcode : string,\r\n    geo : {\r\n        lat : string,\r\n        lng : string\r\n    },\r\n\r\n}\r\n\r\nexport interface  UserListLoading {\r\n  type: typeof USER_LIST_LOADING | typeof USER_LIST_LOADING\r\n}\r\n\r\nexport interface UserListFail {\r\n  type: typeof USER_LIST_FAIL\r\n}\r\n\r\nexport interface UserListSuccess {\r\n  type: typeof USER_LIST_SUCCESS | typeof USER_LIST_SUCCESS,\r\n  payload: UserList\r\n}\r\n\r\n\r\nexport type UserListDispatchType  = UserListLoading | UserListFail | UserListSuccess","import React, { lazy } from \"react\";\r\n// import Home from \"../pages/home\"\r\n\r\nconst Home = React.lazy(() => import('../pages/home'));\r\nconst UserDetail = React.lazy(() => import('../pages/user-detail'));\r\n\r\nconst routers = [\r\n\t{\r\n\t\tname: \"user-list\",\r\n\t\tpath: \"/\",\r\n\t\tcomponent: Home,\r\n\t},\r\n\t{\r\n\t\tname: \"user-detail\",\r\n\t\tpath: \"/user/:id\",\r\n\t\tcomponent: UserDetail,\r\n\t},\r\n];\r\n\r\nexport default routers;\r\n","import React from \"react\";\r\n\r\nexport default function Navbar() {\r\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\r\n  return (\r\n    <>\r\n      <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3  bg-teal-500 mb-3\">\r\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\r\n            <a\r\n              className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase text-white\"\r\n              href=\"#pablo\"\r\n            >\r\n              pink Tailwind Starter Kit\r\n            </a>\r\n            <button\r\n              className=\"text-white cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n              type=\"button\"\r\n              onClick={() => setNavbarOpen(!navbarOpen)}\r\n            >\r\n              <i className=\"fas fa-bars\"></i>\r\n            </button>\r\n          </div>\r\n          <div\r\n            className={\r\n              \"lg:flex flex-grow items-center\" +\r\n              (navbarOpen ? \" flex\" : \" hidden\")\r\n            }\r\n            id=\"example-navbar-danger\"\r\n          >\r\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\r\n                  href=\"#pablo\"\r\n                >\r\n                  <i className=\"fab fa-facebook-square text-lg leading-lg text-white opacity-75\"></i><span className=\"ml-2\">Users</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\r\n                  href=\"#pablo\"\r\n                >\r\n                  <i className=\"fab fa-twitter text-lg leading-lg text-white opacity-75\"></i><span className=\"ml-2\">Post</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\r\n                  href=\"#pablo\"\r\n                >\r\n                  <i className=\"fab fa-pinterest text-lg leading-lg text-white opacity-75\"></i><span className=\"ml-2\">Album</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\nimport Navbar from '../navbar'\r\n\r\nconst Layout: React.FunctionComponent<{}> = (props) => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Layout","import React, { Suspense } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './assets/style/plugin/main.css';\r\nimport './assets/style/styles.scss';\r\n\r\nimport Routes from './config/route'\r\nimport { HashRouter  as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport Layout from \"@components/layout\"\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Router basename=\"/\">\r\n          <Switch>\r\n            <Layout>\r\n              {\r\n                Routes.map((route, index) => (\r\n                  <Route exact path={route.path} component={route.component} key={index} />\r\n                ))\r\n              }\r\n            </Layout>\r\n\r\n          </Switch>\r\n        </Router>\r\n      </Suspense>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n\tUSER_LIST_LOADING,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_SUCCESS,\r\n\tUserListDispatchType,\r\n\tUser,\r\n} from \"@store/types/user.types\";\r\n\r\ninterface DefaultStateI {\r\n    userList : {\r\n        loading : boolean,\r\n        list : User[],\r\n        page : number,\r\n        limit : number, \r\n        error : {\r\n            isError : boolean,\r\n            message : string\r\n        }\r\n    }\r\n}\r\n\r\nconst defaultState: DefaultStateI = {\r\n    userList : {\r\n        loading: false,\r\n        list : [],\r\n        page : 0,\r\n        limit : 10,\r\n        error : {\r\n            isError : false,\r\n            message : \"\"\r\n        }\r\n    }\r\n};\r\n\r\nconst userReducer = (\r\n\tstate: DefaultStateI = defaultState,\r\n\taction: UserListDispatchType,\r\n): DefaultStateI => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LIST_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                userList : {\r\n                    ...state.userList,\r\n                    loading : false\r\n                }\r\n\t\t\t};\r\n\t\tcase USER_LIST_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                userList : {\r\n                    ...state.userList,\r\n                    loading : true\r\n                }\r\n\t\t\t};\r\n\t\tcase USER_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                userList : {\r\n                    ...state.userList,\r\n                    loading : false,\r\n                    list : [\r\n                        ...state.userList.list,\r\n                        ...action.payload.list\r\n                    ],\r\n                    limit : action.payload.limit,\r\n                    page : action.payload.page\r\n                }\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n\tUSER_DETAIL_LOADING,\r\n\tUSER_DETAIL_FAIL,\r\n\tUSER_DETAIL_SUCCESS,\r\n\tUSER_POST_LOADING,\r\n\tUSER_POST_FAIL,\r\n\tUSER_POST_SUCCESS,\r\n\tUSER_ALBUMS_LOADING,\r\n\tUSER_ALBUMS_FAIL,\r\n\tUSER_ALBUMS_SUCCESS,\r\n\tUserDetailDispatchType,\r\n\tUserDetailSuccess,\r\n\tUserPostsDispatchType,\r\n\tuserAlbumsDispatchType,\r\n\tUserPostSuccess,\r\n\tUserAlbumsSuccess,\r\n} from \"@store/types/userDetail.types\";\r\nimport { Post } from \"@store/types/post.types\";\r\nimport { Album } from \"@store/types/album.types\";\r\nimport { User } from \"@store/types/user.types\";\r\n\r\ninterface DefaultStateI {\r\n\tuserDetail: {\r\n\t\tloading: boolean;\r\n\t\tdata: User;\r\n\t\terror: {\r\n\t\t\tisError: boolean;\r\n\t\t\tmessage: string;\r\n\t\t};\r\n\t};\r\n\tposts: {\r\n\t\tloading: boolean;\r\n\t\tdata: Post[];\r\n\t\tpage: number;\r\n\t\tlimit: number;\r\n\t\terror: {\r\n\t\t\tisError: boolean;\r\n\t\t\tmessage: string;\r\n\t\t};\r\n\t};\r\n\talbums: {\r\n\t\tloading: boolean;\r\n\t\tdata: Album[];\r\n\t\tpage: number;\r\n\t\tlimit: number;\r\n\t\terror: {\r\n\t\t\tisError: boolean;\r\n\t\t\tmessage: string;\r\n\t\t};\r\n\t};\r\n}\r\n\r\nconst defaultState: DefaultStateI = {\r\n\tuserDetail: {\r\n\t\tloading: true,\r\n\t\tdata: {\r\n\t\t\tid: \"\",\r\n\t\t\tname: \"\",\r\n\t\t\tusername: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\taddress: {\r\n\t\t\t\tstreet: \"\",\r\n\t\t\t\tsuite: \"\",\r\n\t\t\t\tcity: \"\",\r\n\t\t\t\tzipcode: \"\",\r\n\t\t\t\tgeo: {\r\n\t\t\t\t\tlat: \"\",\r\n\t\t\t\t\tlng: \"\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tphone: \"\",\r\n\t\t\twebsite: \"\",\r\n\t\t\tcompany: {\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tcatchPhrase: \"\",\r\n\t\t\t\tbs: \"\",\r\n\t\t\t},\r\n\t\t},\r\n\t\terror: {\r\n\t\t\tisError: false,\r\n\t\t\tmessage: \"\",\r\n\t\t},\r\n\t},\r\n\tposts: {\r\n\t\tloading: true,\r\n\t\tdata: [],\r\n\t\tpage: 1,\r\n\t\tlimit: 12,\r\n\t\terror: {\r\n\t\t\tisError: false,\r\n\t\t\tmessage: \"\",\r\n\t\t},\r\n\t},\r\n\talbums: {\r\n\t\tloading: false,\r\n\t\tdata: [],\r\n\t\tpage: 1,\r\n\t\tlimit: 12,\r\n\t\terror: {\r\n\t\t\tisError: false,\r\n\t\t\tmessage: \"\",\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst userReducer = (\r\n\tstate: DefaultStateI = defaultState,\r\n\taction: UserDetailDispatchType | UserPostsDispatchType | userAlbumsDispatchType,\r\n): DefaultStateI => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_DETAIL_FAIL:\r\n\t\t\treturn setUserDetailFail(state, action);\r\n\t\tcase USER_DETAIL_LOADING:\r\n\t\t\treturn setUserLoading(state, action);\r\n\t\tcase USER_DETAIL_SUCCESS:\r\n\t\t\treturn setUserSuccess(state, action);\r\n\t\tcase USER_POST_LOADING:\r\n\t\t\treturn setUserPostFail(state);\r\n\t\tcase USER_POST_FAIL:\r\n\t\t\treturn setUserPostLoading(state);\r\n\t\tcase USER_POST_SUCCESS:\r\n\t\t\treturn setUserPostSuccess(state, action);\r\n\t\tcase USER_ALBUMS_FAIL:\r\n\t\t\treturn setUserAlbumsFail(state);\r\n\t\tcase USER_ALBUMS_LOADING:\r\n\t\t\treturn setUserAlbumsLoading(state);\r\n\t\tcase USER_ALBUMS_SUCCESS:\r\n\t\t\treturn setUserAlbumsSuccess(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default userReducer;\r\n\r\nconst setUserDetailFail = (\r\n\tstate: DefaultStateI = defaultState,\r\n\taction: UserDetailDispatchType,\r\n) => {\r\n\tconst { userDetail } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\tuserDetail: {\r\n\t\t\t...userDetail,\r\n\t\t\tloading: false,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst setUserLoading = (\r\n\tstate: DefaultStateI = defaultState,\r\n\taction: UserDetailDispatchType,\r\n) => {\r\n\tconst { userDetail } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\tuserDetail: {\r\n\t\t\t...userDetail,\r\n\t\t\tloading: true,\r\n\t\t},\r\n\t};\r\n};\r\nconst setUserSuccess = (\r\n\tstate: DefaultStateI = defaultState,\r\n\taction: UserDetailSuccess,\r\n) => {\r\n\tconst { userDetail } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\tuserDetail: {\r\n\t\t\t...userDetail,\r\n\t\t\tloading: false,\r\n\t\t\tdata: { ...action.payload },\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst setUserPostFail = (state: DefaultStateI = defaultState) => {\r\n\tconst { posts } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\tposts: {\r\n\t\t\t...posts,\r\n\t\t\tloading: false,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst setUserPostLoading = (state: DefaultStateI = defaultState) => {\r\n\tconst { posts } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\tposts: {\r\n\t\t\t...posts,\r\n\t\t\tloading: true,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst setUserPostSuccess = (\r\n\tstate: DefaultStateI = defaultState,\r\n\taction: UserPostSuccess,\r\n) => {\r\n\tconst { posts } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\tposts: {\r\n\t\t\t...posts,\r\n\t\t\tloading: false,\r\n\t\t\tpage: action.payload.page,\r\n\t\t\tlimit: action.payload.limit,\r\n\t\t\tdata: [...action.payload.posts],\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst setUserAlbumsFail = (state: DefaultStateI = defaultState) => {\r\n\tconst { albums } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\talbums: {\r\n\t\t\t...albums,\r\n\t\t\tloading: false,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst setUserAlbumsLoading = (state: DefaultStateI = defaultState) => {\r\n\tconst { albums } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\talbums: {\r\n\t\t\t...albums,\r\n\t\t\tloading: true,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst setUserAlbumsSuccess = (\r\n\tstate: DefaultStateI = defaultState,\r\n\taction: UserAlbumsSuccess,\r\n) => {\r\n\tconst { albums } = state;\r\n\treturn {\r\n\t\t...state,\r\n\t\talbums: {\r\n\t\t\t...albums,\r\n\t\t\tloading: false,\r\n\t\t\tpage: action.payload.page,\r\n\t\t\tlimit: action.payload.limit,\r\n\t\t\tdata: [...action.payload.albums],\r\n\t\t},\r\n\t};\r\n};\r\n","import {combineReducers} from \"redux\";\r\nimport userReducer from  \"./user\";\r\nimport userDetail from  \"./userDetail\";\r\n\r\nconst RootReducer = combineReducers({\r\n  user: userReducer,\r\n  userDetail\r\n});\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>\r\n\r\nexport default RootReducer","import {createStore, applyMiddleware} from \"redux\";\r\nimport RootReducer from \"./reducers/rootReducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>\r\n\r\nexport default Store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","\r\nimport { User } from './user.types'\r\nimport { Post } from './post.types'\r\nimport { Album } from './album.types'\r\n\r\nexport const USER_DETAIL_LOADING = \"userDetail/USER_DETAIL_LOADING\";\r\nexport const USER_DETAIL_FAIL = \"userDetail/USER_DETAIL_FAIL\";\r\nexport const USER_DETAIL_SUCCESS = \"userDetail/USER_DETAIL_SUCCESS\";\r\nexport const USER_POST_LOADING = \"userDetail/USER_POST_LOADING\";\r\nexport const USER_POST_FAIL = \"userDetail/USER_POST_FAIL\";\r\nexport const USER_POST_SUCCESS = \"userDetail/USER_POST_SUCCESS\";\r\nexport const USER_ADD_POST_LOADING = \"userDetail/USER_POST_LOADING\";\r\nexport const USER_ADD_POST_FAIL = \"userDetail/USER_POST_FAIL\";\r\nexport const USER_ADD_POST_SUCCESS = \"userDetail/USER_POST_SUCCESS\";\r\nexport const USER_ALBUMS_LOADING = \"userDetail/USER_ALBUMS_LOADING\";\r\nexport const USER_ALBUMS_FAIL = \"userDetail/USER_ALBUMS_FAIL\";\r\nexport const USER_ALBUMS_SUCCESS = \"userDetail/USER_ALBUMS_SUCCESS\";\r\n\r\n\r\nexport interface  UserDetailLoading {\r\n  type: typeof USER_DETAIL_LOADING \r\n}\r\n\r\nexport interface UserDetaFail {\r\n  type: typeof USER_DETAIL_FAIL\r\n}\r\n\r\nexport interface UserDetailSuccess {\r\n  type: typeof USER_DETAIL_SUCCESS,\r\n  payload: User\r\n}\r\n\r\nexport interface  UserPostLoading {\r\n    type: typeof USER_POST_LOADING \r\n  }\r\n  \r\n  export interface UserPostFail {\r\n    type: typeof USER_POST_FAIL\r\n  }\r\n  \r\n  export interface UserPostSuccess {\r\n    type: typeof USER_POST_SUCCESS ,\r\n    payload: {\r\n        posts : Post[],\r\n        page : number, limit: number\r\n    } \r\n  }\r\n  export interface  UserAlbumsLoading {\r\n    type: typeof USER_ALBUMS_LOADING \r\n  }\r\n  \r\n  export interface UserAlbumsFail {\r\n    type: typeof USER_ALBUMS_FAIL\r\n  }\r\n  \r\n  export interface UserAlbumsSuccess {\r\n    type: typeof USER_ALBUMS_SUCCESS ,\r\n    payload: {\r\n        albums : Album[],\r\n        page : number, limit: number\r\n    } \r\n  }\r\n\r\nexport type UserDetailDispatchType  = UserDetailLoading | UserDetaFail | UserDetailSuccess\r\nexport type UserPostsDispatchType = UserPostLoading | UserPostFail | UserPostSuccess\r\nexport type userAlbumsDispatchType =  UserAlbumsLoading | UserAlbumsFail | UserAlbumsSuccess"],"sourceRoot":""}